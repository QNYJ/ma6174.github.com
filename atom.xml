<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[多多de棉花糖]]></title>
  <link href="http://hugcoday.github.com/atom.xml" rel="self"/>
  <link href="http://hugcoday.github.com/"/>
  <updated>2012-10-30T09:35:42+08:00</updated>
  <id>http://hugcoday.github.com/</id>
  <author>
    <name><![CDATA[周迪]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[元素周期表记忆法]]></title>
    <link href="http://hugcoday.github.com/blog/2012/10/30/zhouqi/"/>
    <updated>2012-10-30T09:23:00+08:00</updated>
    <id>http://hugcoday.github.com/blog/2012/10/30/zhouqi</id>
    <content type="html"><![CDATA[<p><img src="assets/images/zhouqi.jpg" alt="元素周期表记忆法" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flex 鼠标手势]]></title>
    <link href="http://hugcoday.github.com/blog/2012/10/15/flex-mouse-png/"/>
    <updated>2012-10-15T15:37:00+08:00</updated>
    <id>http://hugcoday.github.com/blog/2012/10/15/flex-mouse-png</id>
    <content type="html"><![CDATA[<p>Flex鼠标手势、自定义光标</p>

<p>一、直接用默认的API</p>

<pre><code>CursorManager.setBusyCursor();//鼠标变成小钟
CursorManager.removeBusyCursor();//由小钟恢复成箭头
</code></pre>

<p>如果是继承自Sprite的组件，可以使用useHandCursor属性控制鼠标是手型还是箭头(一般像按钮那样直接设置这个属性就可以了)；</p>

<p>二、使用 JPEG、GIF、PNG 或 SVG 图像、Sprite 对象或者 SWF 文件来作为光标图像。</p>

<pre><code>[Embed(source="ClickHand.gif")]
public var clickHand:Class;//图标
var cursorID:Number = CursorManager.setCursor(clickHand);//更改鼠标图标
CursorManager.removeCursor(cursorID);//还原鼠标图标
</code></pre>

<p>三、用自定义类显示光标，下面的例子讲光标设为一个圆(具体参考)
例如：</p>

<pre><code>package com{
import flash.display.Sprite;
publicclass Ellipseextends Sprite
{publicfunction Ellipse()
{
this.graphics.lineStyle( 1 , 0x000000 , 1 );
this.graphics.drawEllipse( 0 , 0 , 50 , 10 );
super();
}
}
}
</code></pre>

<p>//在需要改变的地方加上：</p>

<pre><code>CursorManager.setCursor(Ellipse);
</code></pre>

<p>简单的鼠标手型 增加属性</p>

<pre><code>buttonMode="true" useHandCursor="true"
</code></pre>

<p>总结：改变鼠标手势的方式有很多种，可以根据实际需求来选择，有些时候可能需要交互，比如需要根据用户输入的参数来显示光标的大小和颜色，这个自己发挥吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[phonegap小技巧]]></title>
    <link href="http://hugcoday.github.com/blog/2012/09/09/phonegap-not-orientation/"/>
    <updated>2012-09-09T15:37:00+08:00</updated>
    <id>http://hugcoday.github.com/blog/2012/09/09/phonegap-not-orientation</id>
    <content type="html"><![CDATA[<h2>phonegap禁止屏幕旋转</h2>

<p>在AndroidManifest.xml中增加android:screenOrientation=&#8221;landscape&#8221;,如：</p>

<pre><code>&lt;activity android:name="faceturn" android:label="@string/app_name" 
    android:configChanges="orientation|keyboardHidden"
    android:screenOrientation="landscape"&gt;
</code></pre>

<p>landscape是横向，portrait是纵向</p>

<h2>phonegap全屏展示</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我和我的多多]]></title>
    <link href="http://hugcoday.github.com/blog/2012/09/07/mybaby/"/>
    <updated>2012-09-07T20:20:00+08:00</updated>
    <id>http://hugcoday.github.com/blog/2012/09/07/mybaby</id>
    <content type="html"><![CDATA[<h2>我的多多</h2>

<p><img src="assets/images/mybaby.jpg" alt="mybaby" /></p>

<h2>我小时候</h2>

<p><img src="assets/images/me.jpg" alt="me" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android-phonegap开发日记]]></title>
    <link href="http://hugcoday.github.com/blog/2012/09/06/anroid-diary/"/>
    <updated>2012-09-06T21:13:00+08:00</updated>
    <id>http://hugcoday.github.com/blog/2012/09/06/anroid-diary</id>
    <content type="html"><![CDATA[<h2>启动慢，黑屏处理方式</h2>

<pre><code>super.setIntegerProperty("splashscreen", R.drawable.splash);
super.loadUrl("file:///android_asset/www/index.html", 5000);
</code></pre>

<p>然后在res目录下的几个drawable目录下放splash.png图片即可</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于octopress中文乱码]]></title>
    <link href="http://hugcoday.github.com/blog/2012/09/06/about-octopress/"/>
    <updated>2012-09-06T21:02:00+08:00</updated>
    <id>http://hugcoday.github.com/blog/2012/09/06/about-octopress</id>
    <content type="html"><![CDATA[<p>修改文件convertible.rb
文件路径：E:\engine\Ruby193\lib\ruby\gems\1.9.1\gems\jekyll-0.11.2\lib\jekyll
27行</p>

<pre><code>def read_yaml(base, name)
  self.content = File.read(File.join(base, name))
</code></pre>

<p>增加, :encoding => &#8220;utf-8&#8221;</p>

<pre><code>def read_yaml(base, name)
  self.content = File.read(File.join(base, name), :encoding =&gt; "utf-8")
</code></pre>

<p>另外，写文章的时候，编码格式一定是<strong>UTF-8无BOM</strong>格式编码，其他编码会异常。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[helloworld]]></title>
    <link href="http://hugcoday.github.com/blog/2012/09/06/helloworld/"/>
    <updated>2012-09-06T20:23:00+08:00</updated>
    <id>http://hugcoday.github.com/blog/2012/09/06/helloworld</id>
    <content type="html"><![CDATA[<h2>你好，jekyll and octopress</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[命令行环境使用phonegap开发android]]></title>
    <link href="http://hugcoday.github.com/blog/2012/09/05/android-commend-line/"/>
    <updated>2012-09-05T00:00:00+08:00</updated>
    <id>http://hugcoday.github.com/blog/2012/09/05/android-commend-line</id>
    <content type="html"><![CDATA[<h3>环境（必须）：</h3>

<pre><code>ant-1.82
android-tools
jdk-1.6
phonegap 2.0
</code></pre>

<h3>windows环境配置如下：</h3>

<p>将android工具包下tool、planform-tool配置到系统环境变量path中</p>

<p>将jdk配置到系统环境变量中</p>

<pre><code>D:\Android\android-sdk-windows\platform-tools
D:\Android\android-sdk-windows\tools
</code></pre>

<p>将ant配置到系统环境变量中</p>

<pre><code>D:\Java\apache-ant-1.8.2\bin
</code></pre>

<p>将phonegap配置到环境变量中</p>

<pre><code>D:\Engine\phonegap2\lib\android\bin
</code></pre>

<p>创建项目</p>

<pre><code>create e:\android\app com.syscde.app facechange 
</code></pre>

<p>编译项目</p>

<pre><code>执行e:\android\app\ant debug
</code></pre>

<p>模拟运行</p>

<pre><code>执行e:\android\app\caordova\emulate.bat
</code></pre>

<p>不知道怎么回事，总是模拟不起来，只好用手机直接跑
使用命令：</p>

<pre><code>ant clean debug install
</code></pre>

<p>这个不用签名
签名方式如下：</p>

<pre><code>ant clean release 
</code></pre>

<p>创建签名</p>

<pre><code>keytool -genkey -v -keystore facechange.keystore -alias release -keyalg RSA -keysize 2048 -validity 10000
</code></pre>

<p>给apk 签名</p>

<pre><code>jarsigner -keystore facechange.keystore -digestalg SHA1 -sigalg MD5withRSA bin/facechange-release-unsigned.apk release
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[notepad++ markdown插件安装]]></title>
    <link href="http://hugcoday.github.com/blog/2012/08/31/notepad%2B%2B-markdown-plugin/"/>
    <updated>2012-08-31T00:00:00+08:00</updated>
    <id>http://hugcoday.github.com/blog/2012/08/31/notepad++-markdown-plugin</id>
    <content type="html"><![CDATA[<p>Notepad++ 是一款非常友好的编辑器，轻巧、便捷、高效、插件丰富…
同时 Notepad++ 支持用户自定义语法高亮
GitHub上已经有人编写好开源的 Markdown 规则： https://github.com/thomsmits/markdown_npp</p>

<p>一、让Notepad++ 高亮支持 Markdown 语法:</p>

<pre><code>开始菜单 -&gt; 运行 (或者直接按 Ctrl + R) -&gt; 输入 %APPDATA%\Notepad++
将 userDefineLang.xml 放置到此目录
重启 Notepad++，在语言菜单下可以看到自定义的 Markdown 高亮规则

转载：写代码 ? Notepad++ 加入 Markdown 支持
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JAVA 开源报表]]></title>
    <link href="http://hugcoday.github.com/blog/2012/08/31/Java-report/"/>
    <updated>2012-08-31T00:00:00+08:00</updated>
    <id>http://hugcoday.github.com/blog/2012/08/31/Java-report</id>
    <content type="html"><![CDATA[<h2></h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git保存密码的方法]]></title>
    <link href="http://hugcoday.github.com/blog/2012/08/24/git-save-password/"/>
    <updated>2012-08-24T00:00:00+08:00</updated>
    <id>http://hugcoday.github.com/blog/2012/08/24/git-save-password</id>
    <content type="html"><![CDATA[<h2>windows7 配置如下：</h2>

<p>创建_netrc文件，内容为</p>

<pre><code>machine your.server.com
login your-username
password your-password
</code></pre>

<p>创建run.bat，内容为：</p>

<pre><code>setx HOME %USERPROFILE%
copy _netrc %USERPROFILE%
pause
</code></pre>

<p>两个文件放到同一目录下，执行run.bat即可。</p>
]]></content>
  </entry>
  
</feed>
